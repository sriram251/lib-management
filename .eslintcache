[{"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\index.js":"1","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\App.js":"2","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reportWebVitals.js":"3","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\index.js":"4","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\islogged.js":"5","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\counter.js":"6","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\actions\\index.js":"7","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\topnav.js":"8","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\mainpage.js":"9","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\authpage\\login.js":"10","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\firebase\\index.js":"11","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\porfolic.js":"12","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\aboutpage\\Aboutpage.js":"13","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\userlib\\index.js":"14","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\staffpage\\index.js":"15","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\staffpage\\addbook.js":"16","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\page.js":"17","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\userinfo.js":"18","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\mylibrary\\index.js":"19","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\staffpage\\viewstudent.js":"20"},{"size":699,"mtime":1611641424537,"results":"21","hashOfConfig":"22"},{"size":594,"mtime":1613831269461,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611635525399,"results":"24","hashOfConfig":"22"},{"size":333,"mtime":1612532385159,"results":"25","hashOfConfig":"22"},{"size":571,"mtime":1611764611702,"results":"26","hashOfConfig":"22"},{"size":215,"mtime":1611651259463,"results":"27","hashOfConfig":"22"},{"size":779,"mtime":1612532585032,"results":"28","hashOfConfig":"22"},{"size":5148,"mtime":1613723457853,"results":"29","hashOfConfig":"22"},{"size":1954,"mtime":1613722804213,"results":"30","hashOfConfig":"22"},{"size":15997,"mtime":1613711890954,"results":"31","hashOfConfig":"22"},{"size":812,"mtime":1612013808060,"results":"32","hashOfConfig":"22"},{"size":2739,"mtime":1612093552988,"results":"33","hashOfConfig":"22"},{"size":13817,"mtime":1613664210560,"results":"34","hashOfConfig":"22"},{"size":5136,"mtime":1613830564602,"results":"35","hashOfConfig":"22"},{"size":4662,"mtime":1613808773113,"results":"36","hashOfConfig":"22"},{"size":7144,"mtime":1612419222266,"results":"37","hashOfConfig":"22"},{"size":194,"mtime":1612435787485,"results":"38","hashOfConfig":"22"},{"size":253,"mtime":1613711912984,"results":"39","hashOfConfig":"22"},{"size":2377,"mtime":1613830169093,"results":"40","hashOfConfig":"22"},{"size":2195,"mtime":1613831260488,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"121izs2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\index.js",[],["93","94"],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\App.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reportWebVitals.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\index.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\islogged.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\counter.js",["95"],"const counterReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECRIMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\actions\\index.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\topnav.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\mainpage.js",["96","97"],"import React, { useEffect } from \"react\";\r\nimport Topnav from \"./topnav\";\r\nimport { auth, database } from \"../firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login, setuserinfo } from \"../actions\";\r\nimport Portfolio from \"./porfolic\";\r\nimport Profile from \"./aboutpage/Aboutpage\";\r\nimport Library from \"./userlib/index\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Mylibrary from \"./mylibrary\";\r\nimport Staff from \"./staffpage\";\r\nfunction Mainpage() {\r\n  var isstaff = false;\r\n  const dispatch = useDispatch();\r\n  const states = useSelector((state) => state.logged);\r\n  const userinfo = useSelector((state) => state.userinfo);\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    console.log(\"this is from use effet\");\r\n    if (user !== null || !states.islogged) {\r\n      auth.onAuthStateChanged((data) => {\r\n        console.log(data);\r\n        if (data !== null) {\r\n          let db = database.ref(\"details/\" + user.uid);\r\n          db.on(\"value\", (snap) => {\r\n            dispatch(\r\n              setuserinfo({\r\n                uid: user.uid,\r\n                feild: snap.val(),\r\n                isstaff: snap.val().isstaff,\r\n              })\r\n            );\r\n            dispatch(login());\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  if (Object.keys(userinfo).length !== 0) {\r\n    isstaff = userinfo.isstaff;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Topnav></Topnav>\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Portfolio />\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route path=\"/library\">\r\n          <Library />\r\n        </Route>\r\n        {isstaff ? (\r\n          <Route path=\"/staff\">\r\n            <Staff />\r\n          </Route>\r\n        ) : (\r\n          <Route path=\"/MyBooks\">\r\n            <Mylibrary />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mainpage;\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\authpage\\login.js",["98","99","100","101","102"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  Slide,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n  Container,\r\n  TextField,\r\n  IconButton,\r\n  Link,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { setlog, closelogin, login, setuserinfo } from \"../actions\";\r\nimport \"./design.css\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { auth, database } from \"../firebase\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst Logincomp = () => {\r\n  const [message, setmessage] = useState({\r\n    state: false,\r\n    message: \"\",\r\n    type: \"success\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [Email, setemail] = useState({ email: \"\", error: \"\" });\r\n  const [password, setpassword] = useState({ password: \"\", error: \"\" });\r\n  function validatefrom() {\r\n    let vaild = true;\r\n    if (Email.email === \"\") {\r\n      setemail({ ...Email, error: \"please enter email\" });\r\n      vaild = false;\r\n    } else {\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      if (!pattern.test(Email.email)) {\r\n        vaild = false;\r\n        console.log(\"Email not empty\");\r\n        setemail({ ...Email, error: \"*Please enter valid email-ID.\" });\r\n      } else {\r\n        setemail({ ...Email, error: \"\" });\r\n      }\r\n    }\r\n    if (password.password === \"\") {\r\n      setpassword({ ...password, error: \"please enter password\" });\r\n      vaild = false;\r\n    } else {\r\n      console.log(\"password is not empty\");\r\n      if (\r\n        !password.password.match(\r\n          /^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/\r\n        )\r\n      ) {\r\n        console.log(\"password not ok \");\r\n        vaild = false;\r\n        setpassword({\r\n          ...password,\r\n          error: \"*Please enter secure and strong password.\",\r\n        });\r\n      } else {\r\n        setpassword({\r\n          ...password,\r\n          error: \"\",\r\n        });\r\n      }\r\n    }\r\n    return vaild;\r\n  }\r\n  function handlechange(e) {\r\n    if (e.target.name === \"email\") {\r\n      setemail({ ...Email, email: e.target.value });\r\n    }\r\n    if (e.target.name === \"password\") {\r\n      setpassword({ ...password, password: e.target.value });\r\n    }\r\n  }\r\n  function handlelogin(e) {\r\n    e.preventDefault();\r\n    if (validatefrom()) {\r\n      auth\r\n        .signInWithEmailAndPassword(Email.email, password.password)\r\n        .then((user) => {\r\n          console.log(user.user.uid);\r\n          let db = database.ref(\"details/\" + user.user.uid);\r\n          db.on(\"value\", (snap) => {\r\n            console.log(\"this is from login\", snap.val());\r\n            dispatch(\r\n              setuserinfo({\r\n                uid: user.uid,\r\n                feild: snap.val(),\r\n                isstaff: snap.val().isstaff,\r\n              })\r\n            );\r\n            dispatch(closelogin());\r\n            dispatch(login());\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setmessage({ state: true, message: e.message, type: \"warning\" });\r\n        });\r\n      setemail({ email: \"\", error: \"\" });\r\n      setpassword({ password: \"\", error: \"\" });\r\n      console.log(Email, password);\r\n    }\r\n  }\r\n  function handleClose() {\r\n    setmessage({ state: false, message: \"\", type: \"success\" });\r\n  }\r\n  return (\r\n    <Box height=\"100%\" className=\"authpage\">\r\n      <Container maxWidth=\"xs\" className=\"popscreen\">\r\n        <Typography variant=\"h4\" className=\"heading\">\r\n          Login\r\n        </Typography>\r\n        <Divider />\r\n        <form className=\"component\">\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n            alignContent=\"flex-start\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item xs={10}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    error={Email.error !== \"\"}\r\n                    className=\"components\"\r\n                    variant=\"filled\"\r\n                    label=\"Email\"\r\n                    size=\"small\"\r\n                    name=\"email\"\r\n                    value={Email.email}\r\n                    helperText={Email.error}\r\n                    placeholder=\"example@gmail.com\"\r\n                    onChange={handlechange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={password.error !== \"\"}\r\n                    fullWidth\r\n                    className=\"components\"\r\n                    variant=\"filled\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    size=\"small\"\r\n                    value={password.password}\r\n                    helperText={password.error}\r\n                    placeholder=\"password\"\r\n                    onChange={handlechange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Grid container spacing={2}>\r\n                <Grid container item xs={6} sm={8} justify=\"flex-start\">\r\n                  <Link>forget password?</Link>\r\n                </Grid>\r\n                <Grid item xs={6} sm={4}>\r\n                  <Button\r\n                    className=\"butto component\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={handlelogin}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={10}>\r\n              <Grid container item xs={6} justify=\"flex-start\">\r\n                <Link\r\n                  onClick={() => {\r\n                    dispatch(closelogin());\r\n                  }}\r\n                >\r\n                  No thanks?\r\n                </Link>\r\n              </Grid>\r\n              <Grid container item xs={6} justify=\"flex-end\">\r\n                <Link\r\n                  onClick={() => {\r\n                    dispatch(setlog(\"SIGNIN\"));\r\n                  }}\r\n                >\r\n                  sign in?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Snackbar\r\n          open={message.state}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity={message.type}>\r\n            {message.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\nconst Signincomp = () => {\r\n  const dispatch = useDispatch();\r\n  const [message, setmessage] = useState({\r\n    state: false,\r\n    message: \"\",\r\n    type: \"success\",\r\n  });\r\n  const [username, setusername] = useState({ username: \"\", error: \"\" });\r\n  const [RegNo, setRegNo] = useState({ RegNo: \"\", error: \"\" });\r\n  const [Email, setemail] = useState({ email: \"\", error: \"\" });\r\n  const [password, setpassword] = useState({ password: \"\", error: \"\" });\r\n  function handleClose() {\r\n    setmessage({ state: false, message: \"\", type: \"success\" });\r\n  }\r\n  function validatefrom() {\r\n    let vaild = true;\r\n    if (username.username === \"\") {\r\n      vaild = false;\r\n      setusername({ ...username, error: \"please enter username\" });\r\n    } else {\r\n      if (!username.username.match(/^[a-zA-Z ]*$/)) {\r\n        vaild = false;\r\n        setusername({\r\n          ...username,\r\n          error: \"Please enter alphabet characters only.\",\r\n        });\r\n      } else {\r\n        setusername({\r\n          ...username,\r\n          error: \"\",\r\n        });\r\n      }\r\n    }\r\n    if (Email.email === \"\") {\r\n      setemail({ ...Email, error: \"please enter email\" });\r\n      vaild = false;\r\n    } else {\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      if (!pattern.test(Email.email)) {\r\n        vaild = false;\r\n        setemail({ ...Email, error: \"*Please enter valid email-ID.\" });\r\n      } else {\r\n        setemail({ ...Email, error: \"\" });\r\n      }\r\n    }\r\n    if (RegNo.RegNo === \"\") {\r\n      setemail({ ...RegNo, error: \"please enter RegNo\" });\r\n      vaild = false;\r\n    } else {\r\n      pattern = new RegExp(/\\d{2}[A-Za-z]{1,3}\\d{1,3}/i);\r\n      console.log(pattern.test(RegNo.RegNo), RegNo.RegNo);\r\n      if (!pattern.test(RegNo.RegNo)) {\r\n        vaild = false;\r\n        setRegNo({ ...RegNo, error: \"*Please enter valid RegNo\" });\r\n        console.log(RegNo);\r\n      } else {\r\n        setRegNo({ ...RegNo, error: \"\" });\r\n      }\r\n    }\r\n    if (password.password === \"\") {\r\n      setpassword({ ...password, error: \"please enter password\" });\r\n      vaild = false;\r\n    } else {\r\n      if (\r\n        !password.password.match(\r\n          /^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/\r\n        )\r\n      ) {\r\n        console.log(password.password);\r\n        vaild = false;\r\n        setpassword({\r\n          ...password,\r\n          error: \"*Please enter secure and strong password.\",\r\n        });\r\n      } else {\r\n        setpassword({\r\n          ...password,\r\n          error: \"\",\r\n        });\r\n      }\r\n    }\r\n    return vaild;\r\n  }\r\n  function handlechange(e) {\r\n    if (e.target.name === \"email\") {\r\n      setemail({ ...Email, email: e.target.value });\r\n    } else if (e.target.name === \"password\") {\r\n      setpassword({ ...password, password: e.target.value });\r\n    } else if (e.target.name === \"username\") {\r\n      setusername({ ...username, username: e.target.value });\r\n    } else if (e.target.name === \"RegNo\") {\r\n      setRegNo({ ...RegNo, RegNo: e.target.value });\r\n    }\r\n  }\r\n  function handlesignin(e) {\r\n    e.preventDefault();\r\n    if (validatefrom()) {\r\n      let user = auth\r\n        .createUserWithEmailAndPassword(Email.email, password.password)\r\n        .then((user) => {\r\n          setmessage({\r\n            state: true,\r\n            message: \"sig-in successfull\",\r\n            type: \"success\",\r\n          });\r\n          database\r\n            .ref(\"/details/\" + user.user.uid)\r\n            .set({\r\n              imageurl:\r\n                \"https://support.grasshopper.com/assets/images/care/topnav/default-user-avatar.jpg\",\r\n              updated: false,\r\n              firstName: username.username,\r\n              RegNo: RegNo.RegNo,\r\n              isstaff: false,\r\n              lastname: \"\",\r\n              fathername: \"\",\r\n              mothername: \"\",\r\n              MobileNumber: \"\",\r\n              alternativeNumber: \"\",\r\n            })\r\n            .then((e) => console.log(e));\r\n          console.log(user.user.uid);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setmessage({ state: true, message: e.message, type: \"warning\" });\r\n          console.log(message);\r\n        });\r\n      setemail({ email: \"\", error: \"\" });\r\n      setpassword({ password: \"\", error: \"\" });\r\n      setusername({ username: \"\", error: \"\" });\r\n      setRegNo({ RegNo: \"\", error: \"\" });\r\n    }\r\n  }\r\n  return (\r\n    <Box height=\"100%\" className=\"authpage\">\r\n      <Container maxWidth=\"xs\" className=\"popscreen\">\r\n        <Typography variant=\"h4\" className=\"heading\">\r\n          Register\r\n        </Typography>\r\n        <Divider />\r\n        <form className=\"component\">\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n            alignContent=\"flex-start\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item xs={10}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={username.error !== \"\"}\r\n                    fullWidth\r\n                    className=\"components\"\r\n                    variant=\"filled\"\r\n                    name=\"username\"\r\n                    value={username.username}\r\n                    label=\"username\"\r\n                    size=\"small\"\r\n                    placeholder=\"example\"\r\n                    onChange={handlechange}\r\n                    helperText={username.error}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={RegNo.error !== \"\"}\r\n                    fullWidth\r\n                    className=\"components\"\r\n                    variant=\"filled\"\r\n                    name=\"RegNo\"\r\n                    value={RegNo.RegNo}\r\n                    label=\"RegNo\"\r\n                    size=\"small\"\r\n                    placeholder=\"example\"\r\n                    onChange={handlechange}\r\n                    helperText={RegNo.error}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    error={Email.error !== \"\"}\r\n                    className=\"components\"\r\n                    variant=\"filled\"\r\n                    label=\"Email\"\r\n                    size=\"small\"\r\n                    name=\"email\"\r\n                    value={Email.email}\r\n                    helperText={Email.error}\r\n                    placeholder=\"example@gmail.com\"\r\n                    onChange={handlechange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={password.error !== \"\"}\r\n                    fullWidth\r\n                    className=\"components\"\r\n                    variant=\"filled\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    size=\"small\"\r\n                    value={password.password}\r\n                    helperText={password.error}\r\n                    placeholder=\"password\"\r\n                    onChange={handlechange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Grid container spacing={2}>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={6}\r\n                  justify=\"flex-start\"\r\n                  className=\"signbutton\"\r\n                >\r\n                  <Button\r\n                    className=\"butto component\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={handlesignin}\r\n                  >\r\n                    sign-in\r\n                  </Button>\r\n                </Grid>\r\n                <Grid container item xs={6} justify=\"flex-end\">\r\n                  <Link\r\n                    onClick={() => {\r\n                      dispatch(setlog(\"LOGIN\"));\r\n                    }}\r\n                  >\r\n                    login?\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Snackbar\r\n          open={message.state}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity={message.type}>\r\n            {message.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\nfunction Loginpage() {\r\n  const login = useSelector((state) => state.logged);\r\n  if (login.state === \"LOGIN\") {\r\n    return <Logincomp />;\r\n  } else {\r\n    return <Signincomp />;\r\n  }\r\n}\r\n\r\nexport default Loginpage;\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\firebase\\index.js",["103"],"import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAA3pegVhtG-KZBFespTTG404U7be_zwp4\",\r\n  authDomain: \"sensorsdatas.firebaseapp.com\",\r\n  databaseURL: \"https://sensorsdatas-default-rtdb.firebaseio.com\",\r\n  projectId: \"sensorsdatas\",\r\n  storageBucket: \"sensorsdatas.appspot.com\",\r\n  messagingSenderId: \"535972246325\",\r\n  appId: \"1:535972246325:web:a2be8b43b5f0b35898127c\",\r\n  measurementId: \"G-NQ04XZKG57\",\r\n};\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\nexport const storage = firebase.app().storage(\"gs://sensorsdatas.appspot.com\");\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\porfolic.js",["104","105"],"import React from \"react\";\r\nimport {\r\n  Image,\r\n  Row,\r\n  Button,\r\n  Col,\r\n  Carousel,\r\n  CarouselItem,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./portfolio.css\";\r\nexport default function Porfolic() {\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img\r\n            className=\"d-block w-100 carimg\"\r\n            alt=\"First slide\"\r\n            src=\"https://www.mundarelibrary.ab.ca/public/uploads/snippets/1593454196bannerimage/1606416985-1600w_595h_1593454196bannerimage.jpg\"\r\n          />\r\n          <Carousel.Caption className=\"captionText\">\r\n            <h3>Jorge Luis Borges </h3>\r\n            <p>\r\n              I have always imagined that Paradise will be a kind of a Library.\"\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100 carimg\"\r\n            alt=\"second slide\"\r\n            src=\"https://www.princeton.edu/sites/default/files/styles/half_2x/public/images/2017/12/20170509_Eng_Library_DJA_012_3.jpg?itok=P8rKug-h\"\r\n          />\r\n          <Carousel.Caption className=\"captionText\">\r\n            <h3>Walter Savage Landor </h3>\r\n            <p>Nothing is pleasanter than exploring a library.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100 carimg\"\r\n            alt=\"third slide\"\r\n            src=\"https://images.unsplash.com/photo-1524995997946-a1c2e315a42f?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8bGlicmFyeXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\"\r\n          />\r\n          <Carousel.Caption className=\"captionText\">\r\n            <h3>Jorge Luis Borges </h3>\r\n            <p>\r\n              I have always imagined that Paradise will be a kind of a Library.\"\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <div className=\"user-info\">\r\n        <Row className=\"changeover\">\r\n          <Col xs={12} md={6} className=\"visual-content\">\r\n            <div className=\"text-content\">\r\n              <h3>so Much To See </h3>\r\n              <h3> so Much To Do</h3>\r\n              <p> @your library</p>\r\n              <a href=\"/profile\" className=\"change-to\">\r\n                access liberary\r\n              </a>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"image-content\">\r\n            <Image\r\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxSpUCgM9c1Gxb8VZ63EpeLiw8VdMqAEkb6w&usqp=CAU\"\r\n              alt=\"library-image\"\r\n              className=\"library-image\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\aboutpage\\Aboutpage.js",["106","107"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./about.css\";\r\nimport { auth, database, storage } from \"../../firebase\";\r\nimport {\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Button,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login, openlog } from \"../../actions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nfunction Aboutpage() {\r\n  const [message, setmessage] = useState({});\r\n  const status = useSelector((i) => i.logged);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(\"testing\", status);\r\n  if (!status.islogged) {\r\n    dispatch(openlog());\r\n  }\r\n  const tempurl =\r\n    \"https://support.grasshopper.com/assets/images/care/topnav/default-user-avatar.jpg\";\r\n  const [state, setstate] = useState({\r\n    uid: \"\",\r\n    feild: {\r\n      imageurl: tempurl,\r\n      updated: false,\r\n      firstName: \"\",\r\n      lastname: \"\",\r\n      fathername: \"\",\r\n      mothername: \"\",\r\n      MobileNumber: \"\",\r\n      recivebooks: {},\r\n      alternativeNumber: \"\",\r\n    },\r\n    progress: 0,\r\n  });\r\n  const [error, seterror] = useState({\r\n    firstName: \"\",\r\n    lastname: \"\",\r\n    fathername: \"\",\r\n    mothername: \"\",\r\n    MobileNumber: \"\",\r\n    alternativeNumber: \"\",\r\n    imageurl: \"\",\r\n  });\r\n  function validateForm() {\r\n    let feilds = state.feild;\r\n    let errors = {\r\n      firstName: \"\",\r\n      lastname: \"\",\r\n      fathername: \"\",\r\n      mothername: \"\",\r\n      MobileNumber: \"\",\r\n      alternativeNumber: \"\",\r\n      imageurl: \"\",\r\n    };\r\n    console.log(feilds);\r\n    let fromisvalid = true;\r\n    if (!feilds[\"firstName\"]) {\r\n      fromisvalid = false;\r\n      errors[\"firstName\"] = \"*Please enter your firstName\";\r\n    }\r\n    if (typeof feilds[\"firstName\"] !== \"undefined\") {\r\n      if (!feilds[\"firstName\"].match(/^[a-zA-Z ]*$/)) {\r\n        fromisvalid = false;\r\n        errors[\"firstName\"] = \"Please enter alphabet characters only.\";\r\n      }\r\n    }\r\n    if (!feilds[\"lastname\"]) {\r\n      fromisvalid = false;\r\n      errors[\"lastname\"] = \"*Please enter your lastname\";\r\n    }\r\n    if (typeof feilds[\"lastname\"] !== \"undefined\") {\r\n      if (!feilds[\"lastname\"].match(/^[a-zA-Z ]*$/)) {\r\n        fromisvalid = false;\r\n        errors[\"lastname\"] = \"Please enter alphabet characters only.\";\r\n      }\r\n    }\r\n    if (typeof feilds[\"firstName\"] !== \"undefined\") {\r\n      if (!feilds[\"firstName\"].match(/^[a-zA-Z ]*$/)) {\r\n        fromisvalid = false;\r\n        errors[\"firstName\"] = \"Please enter alphabet characters only.\";\r\n      }\r\n    }\r\n    if (!feilds[\"mothername\"]) {\r\n      fromisvalid = false;\r\n      errors[\"mothername\"] = \"*Please enter your mothername\";\r\n    }\r\n    if (typeof feilds[\"mothername\"] !== \"undefined\") {\r\n      if (!feilds[\"mothername\"].match(/^[a-zA-Z ]*$/)) {\r\n        fromisvalid = false;\r\n        errors[\"mothername\"] = \"Please enter alphabet characters only.\";\r\n      }\r\n    }\r\n    if (!feilds[\"fathername\"]) {\r\n      fromisvalid = false;\r\n      errors[\"fathername\"] = \"*Please enter your fathername\";\r\n    }\r\n    if (typeof feilds[\"fathername\"] !== \"undefined\") {\r\n      if (!feilds[\"fathername\"].match(/^[a-zA-Z ]*$/)) {\r\n        fromisvalid = false;\r\n        errors[\"fathername\"] = \"Please enter alphabet characters only.\";\r\n      }\r\n    }\r\n    if (!feilds[\"MobileNumber\"]) {\r\n      fromisvalid = false;\r\n      errors[\"MobileNumber\"] = \"*Please enter your MobileNumber\";\r\n    }\r\n    if (typeof feilds[\"MobileNumber\"] !== \"undefined\") {\r\n      var pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(feilds[\"MobileNumber\"])) {\r\n        fromisvalid = false;\r\n        errors[\"MobileNumber\"] = \"Please enter only number.\";\r\n      } else if (feilds[\"MobileNumber\"].length !== 10) {\r\n        fromisvalid = false;\r\n        errors[\"MobileNumber\"] = \"Please enter valid phone number\";\r\n      }\r\n    }\r\n    if (feilds[\"imageurl\"] === tempurl) {\r\n      fromisvalid = false;\r\n      errors[\"imageurl\"] = \"*Please upload correct image file\";\r\n    }\r\n    seterror(errors);\r\n    return fromisvalid;\r\n  }\r\n  function Tabledata() {\r\n    console.log(\"data\", Object.values(message));\r\n    let arr = Object.values(message);\r\n    let data = arr.map((i) => {\r\n      return (\r\n        <tr key={i.isbn}>\r\n          <td>{i.isbn}</td>\r\n          <td>{i.booktitle}</td>\r\n          <td>{i.reciveddate}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return data;\r\n  }\r\n  function SubmitForm(e) {\r\n    let db = database.ref(\"details/\" + state.uid);\r\n    console.log(error);\r\n    if (validateForm()) {\r\n      console.log(\"is is from ok\");\r\n      let feild = state.feild;\r\n      feild.updated = true;\r\n      setstate({ ...state, feild: feild });\r\n      db.set(state.feild)\r\n        .then((e) => {\r\n          console.log(e);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n    let feild = state.feild;\r\n    let errors = state.error;\r\n    let imageurl = \"\";\r\n    if (\r\n      e.target.name === \"profileimage\" &&\r\n      !(e.target.files[0] === undefined)\r\n    ) {\r\n      if (e.target.files[0].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n        console.log(\"file reads\");\r\n        const uploadpic = storage\r\n          .ref(`users/${state.uid}/profile.jpg`)\r\n          .put(e.target.files[0]);\r\n        uploadpic.on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            console.log(\"this is span  :\", snap);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`users/${state.uid}/profile.jpg`)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                feild[\"imageurl\"] = url;\r\n\r\n                setstate({ ...state, feild: feild });\r\n              });\r\n          }\r\n        );\r\n      } else {\r\n        imageurl = \"Invalid image content.\";\r\n        seterror({ errors });\r\n      }\r\n    } else {\r\n      feild[e.target.name] = e.target.value;\r\n      setstate({ ...state, feild: feild });\r\n    }\r\n    seterror({ ...error, imageurl: imageurl });\r\n    console.log(state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n\r\n    console.log(user);\r\n    if (user !== null) {\r\n      user.providerData.forEach((data) => {\r\n        console.log(data);\r\n\r\n        auth.onAuthStateChanged((user) => {\r\n          let db = database.ref(\"details/\" + user.uid);\r\n          db.once(\"value\").then((snap) => {\r\n            if (snap.val() !== null) {\r\n              console.log(\"out\", snap.val());\r\n              setstate({ ...state, feild: snap.val(), uid: user.uid });\r\n              if (\"recivebooks\" in snap.val()) {\r\n                setmessage(snap.val().recivebooks);\r\n              }\r\n            }\r\n          });\r\n          seterror({});\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"about-page\">\r\n      <div className=\"user-window\">\r\n        <h1 className=\"caption-text\">Profile</h1>\r\n        <br />\r\n        <Container>\r\n          <Form>\r\n            <Row class>\r\n              <Col xs={12} md={5} className=\"image-palce\">\r\n                <Row xs={12}>\r\n                  <Image\r\n                    src={state.feild.imageurl}\r\n                    roundedCircle\r\n                    className=\"profileimage\"\r\n                  />\r\n                </Row>\r\n                <Row xs={12}>\r\n                  <Form.File className=\"file-input\">\r\n                    <Form.File.Label>profile-image</Form.File.Label>\r\n                    <Form.File.Input\r\n                      type=\"file\"\r\n                      name=\"profileimage\"\r\n                      onChange={handleChange}\r\n                      disabled={state.feild.updated}\r\n                      className=\"input-img\"\r\n                    />\r\n                    <Form.Text className=\"text-danger\">\r\n                      {error.imageurl}\r\n                    </Form.Text>\r\n                  </Form.File>\r\n                </Row>\r\n              </Col>\r\n              <Col xs={12} md={6} className=\"userDetail\">\r\n                <Row>\r\n                  <Col xs={6} md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>*First Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        placeholder=\"firstName\"\r\n                        value={state.feild.firstName}\r\n                        onChange={handleChange}\r\n                        disabled={state.feild.updated}\r\n                      />\r\n                      <Form.Text className=\"text-danger\">\r\n                        {error.firstName}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>*last Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"lastname\"\r\n                        value={state.feild.lastname}\r\n                        onChange={handleChange}\r\n                        disabled={state.feild.updated}\r\n                      />\r\n                      <Form.Text className=\"text-danger\">\r\n                        {error.lastname}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={12} md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>*father Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"fathername\"\r\n                        placeholder=\"father name\"\r\n                        value={state.feild.fathername}\r\n                        onChange={handleChange}\r\n                        disabled={state.feild.updated}\r\n                      />\r\n                      <Form.Text className=\"text-danger\">\r\n                        {error.fathername}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12} md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>*mother Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"mothername\"\r\n                        placeholder=\"mothername\"\r\n                        value={state.feild.mothername}\r\n                        onChange={handleChange}\r\n                        disabled={state.feild.updated}\r\n                      />\r\n                      <Form.Text className=\"text-danger\">\r\n                        {error.mothername}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={12} md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>*mobile number</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"MobileNumber\"\r\n                        placeholder=\"Mobile Number\"\r\n                        value={state.feild.MobileNumber}\r\n                        onChange={handleChange}\r\n                        disabled={state.feild.updated}\r\n                      />\r\n                      <Form.Text className=\"text-danger\">\r\n                        {error.MobileNumber}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12} md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>alternative number</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"alternativeNumber\"\r\n                        placeholder=\"alternative Number\"\r\n                        value={state.feild.alternativeNumber}\r\n                        onChange={handleChange}\r\n                        disabled={state.feild.updated}\r\n                      />\r\n                      <Form.Text className=\"text-danger\">\r\n                        {error.alternativeNumber}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {!state.feild.updated ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      className=\"submit-button\"\r\n                      onClick={SubmitForm}\r\n                    >\r\n                      update\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"success\"\r\n                      className=\"submit-button\"\r\n                      onClick={() => {\r\n                        let feilds = state.feild;\r\n                        feilds[\"updated\"] = false;\r\n                        setstate({ ...state, feild: feilds });\r\n                      }}\r\n                    >\r\n                      <CheckIcon /> edit\r\n                    </Button>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Row>\r\n            <Col className=\"datalist\">\r\n              <p>books list</p>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>isbn</th>\r\n                    <th>booktitle</th>\r\n                    <th>reciveddate</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <Tabledata />\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aboutpage;\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\userlib\\index.js",["108","109","110"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./library.css\";\r\nimport moment from \"moment\";\r\nimport { auth, database } from \"../../firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openlog } from \"../../actions\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Row, Col, Button, Accordion } from \"react-bootstrap\";\r\nfunction Card_data(props) {\r\n  var { books, search, type } = props;\r\n  const userinfo = useSelector((state) => state.userinfo);\r\n  var arr = books;\r\n  arr = arr.filter((i) => {\r\n    return i[type].toString().toLowerCase().includes(search);\r\n  });\r\n  function getbook(isbn, numberofbooks, title) {\r\n    auth.onAuthStateChanged((user) => {\r\n      let alreadyexist;\r\n      if (userinfo.feild.recivebooks === undefined) {\r\n        alreadyexist = false;\r\n      } else if (Object.keys(userinfo.feild.recivebooks).includes(isbn)) {\r\n        alreadyexist = true;\r\n      } else {\r\n        alreadyexist = false;\r\n      }\r\n      if (!alreadyexist) {\r\n        let db;\r\n        db = database.ref(`details/${userinfo.uid}/recivebooks/${isbn}`);\r\n        db.set({\r\n          isbn: isbn,\r\n          booktitle: title,\r\n          reciveddate: moment().format(\"DD MMM YYYY\"),\r\n          submitiondata: moment().add(7, \"days\").format(\"DD MMM YYYY\"),\r\n          status: \"Not-submited\",\r\n        });\r\n        db = database.ref(\r\n          `bookdata/pickedbooks/${userinfo.feild.RegNo}${isbn}`\r\n        );\r\n        db.set({\r\n          isbn: isbn,\r\n          booktitle: title,\r\n          reciveddate: moment().format(\"DD MMM YYYY\"),\r\n          submitiondata: moment().add(7, \"days\").format(\"DD MMM YYYY\"),\r\n          studentuid: userinfo.uid,\r\n          studentname: userinfo.feild.firstName + \" \" + userinfo.feild.lastname,\r\n          RegNo: userinfo.feild.RegNo,\r\n        });\r\n        db = database.ref(`bookdata/books/${isbn}`);\r\n        db.once(\"value\").then((e) => {\r\n          db.set({ ...e.val(), totalbooks: numberofbooks - 1 });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  var datas = arr.map((i) => {\r\n    return (\r\n      <div className=\"books-data\" key={i.isbn}>\r\n        <Accordion.Toggle as={\"div\"} variant=\"link\" eventKey={i.isbn}>\r\n          <img src={i.thumbnailUrl} alt=\"no image\" className=\"thumbnailimg\" />\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={i.isbn} className=\"detail-discription\">\r\n          <Row>\r\n            <Col xs={12} sm={4} className=\"detail-discription-image\">\r\n              <h3 className=\"Title\">{i.title}</h3>\r\n              <img\r\n                src={i.thumbnailUrl}\r\n                alt=\"no image\"\r\n                className=\"thumbnailimg\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} sm={8}>\r\n              <h3 className=\"Title\">{i.authors.toString()}</h3>\r\n              <div className=\"detail-content\">\r\n                <p>{i.shortDescription}</p>\r\n              </div>\r\n              <div>\r\n                <p> pageCount : {i.pageCount}</p>\r\n                <p> TotalBooks : {i.totalbooks}</p>\r\n                <Button\r\n                  disabled={!i.totalbooks}\r\n                  onClick={() => {\r\n                    getbook(i.isbn, i.totalbooks, i.title);\r\n                  }}\r\n                >\r\n                  getBook\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Accordion.Collapse>\r\n      </div>\r\n    );\r\n  });\r\n  return datas;\r\n}\r\nfunction Library() {\r\n  const status = useSelector((i) => i.logged);\r\n  const dispatch = useDispatch();\r\n  console.log(\"testing\", status);\r\n  if (!status.islogged) {\r\n    dispatch(openlog());\r\n  }\r\n  const [books, setbooks] = useState([]);\r\n  const [search, setsearch] = useState(\"\");\r\n  const [type, settype] = useState(\"authors\");\r\n  useEffect(() => {\r\n    let db = database.ref(\"bookdata/books\");\r\n    db.on(\"value\", (snap) => {\r\n      setbooks(Object.values(snap.val()));\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"library\">\r\n      <div className=\"search-bar\">\r\n        <h1 className=\"heading\"> Search Books </h1>\r\n        <div className=\"search-group\">\r\n          <input\r\n            className=\"search-input\"\r\n            placeholder=\"enter\"\r\n            value={search}\r\n            onChange={(e) => {\r\n              setsearch(e.target.value);\r\n            }}\r\n          />\r\n          <select\r\n            name=\"cars\"\r\n            id=\"type\"\r\n            value={type}\r\n            onChange={(e) => {\r\n              settype(e.target.value);\r\n              console.log(type);\r\n            }}\r\n          >\r\n            <option value=\"title\">title</option>\r\n            <option value=\"isbn\">isbn</option>\r\n            <option value=\"authors\">authors</option>\r\n          </select>\r\n          <button className=\"search-button\">\r\n            <SearchIcon />\r\n          </button>\r\n        </div>\r\n        <div className=\"search-results\">\r\n          <Accordion>\r\n            <div className=\"book-container\">\r\n              <Card_data books={books} search={search} type={type} />\r\n            </div>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\staffpage\\index.js",["111","112","113","114"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./staffpage.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { Row, Col, Dropdown, Accordion } from \"react-bootstrap\";\r\nimport { database } from \"../../firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openlog } from \"../../actions\";\r\nimport Addbooks from \"./addbook\";\r\nimport Viewstudent from \"./viewstudent\";\r\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nfunction Card_data(props) {\r\n  var { books, search, type } = props;\r\n  var arr = books;\r\n  arr = arr.filter((i) => {\r\n    return i[type].toString().toLowerCase().includes(search);\r\n  });\r\n  var datas = arr.map((i) => {\r\n    return (\r\n      <div className=\"books-data\" key={i.isbn}>\r\n        <Accordion.Toggle as={\"div\"} variant=\"link\" eventKey={i.isbn}>\r\n          <img src={i.thumbnailUrl} alt=\"no image\" className=\"thumbnailimg\" />\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={i.isbn} className=\"detail-discription\">\r\n          <Row>\r\n            <Col xs={12} sm={4} className=\"detail-discription-image\">\r\n              <h3 className=\"Title\">{i.title}</h3>\r\n              <img\r\n                src={i.thumbnailUrl}\r\n                alt=\"no image\"\r\n                className=\"thumbnailimg\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} sm={8}>\r\n              <h3 className=\"Title\">{i.authors.toString()}</h3>\r\n              <div className=\"detail-content\">\r\n                <p>{i.shortDescription}</p>\r\n              </div>\r\n              <div>\r\n                <p> pageCount : {i.pageCount}</p>\r\n                <p> TotalBooks : {i.totalbooks}</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Accordion.Collapse>\r\n      </div>\r\n    );\r\n  });\r\n  return datas;\r\n}\r\nfunction Staffpage() {\r\n  const status = useSelector((i) => i.logged);\r\n  const dispatch = useDispatch();\r\n  console.log(\"testing\", status);\r\n  if (!status.islogged) {\r\n    dispatch(openlog());\r\n  }\r\n  const [books, setbooks] = useState([]);\r\n  const [search, setsearch] = useState(\"\");\r\n  const [type, settype] = useState(\"authors\");\r\n  const [index, setindex] = useState([]);\r\n  useEffect(() => {\r\n    if (status.islogged) {\r\n      let db = database.ref(\"bookdata/books\");\r\n      db.on(\"value\", (snap) => {\r\n        console.log(Object.values(snap.val()));\r\n        setindex(Object.keys(snap.val()));\r\n        setbooks(Object.values(snap.val()));\r\n      });\r\n    }\r\n  }, []);\r\n  let { path, url } = useRouteMatch();\r\n  return (\r\n    <div className=\"staffpage\">\r\n      <Row>\r\n        <Col sm={3} xs={12} className=\"staff-menu\">\r\n          <h3 id=\"MENU-title\">Menu</h3>\r\n          <Dropdown.Divider />\r\n          <ul className=\"menu-list\">\r\n            <li>\r\n              <PeopleIcon />\r\n              <Link to={`${url}`}>View Book</Link>\r\n            </li>\r\n            <li>\r\n              <AddIcon />\r\n              <Link to={`${url}/AddBook`}>Add Book</Link>\r\n            </li>\r\n            <li>\r\n              <ViewCarouselIcon />\r\n              <Link to={`${url}/viewstudents`}>view students</Link>\r\n            </li>\r\n          </ul>\r\n          <div className=\"search-type\">\r\n            <p>filter by</p>\r\n            <input\r\n              placeholder=\"search\"\r\n              value={search}\r\n              onChange={(e) => {\r\n                setsearch(e.target.value);\r\n              }}\r\n            />\r\n            <select\r\n              name=\"cars\"\r\n              id=\"type\"\r\n              value={type}\r\n              onChange={(e) => {\r\n                settype(e.target.value);\r\n                console.log(type);\r\n              }}\r\n            >\r\n              <option value=\"title\">title</option>\r\n              <option value=\"isbn\">isbn</option>\r\n              <option value=\"authors\">authors</option>\r\n            </select>\r\n          </div>\r\n        </Col>\r\n        <Col sm={9} xs={12} className=\"start-result\">\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Accordion>\r\n                <div className=\"book-container\">\r\n                  <Card_data books={books} search={search} type={type} />\r\n                </div>\r\n              </Accordion>\r\n            </Route>\r\n            <Route path={`${path}/viewstudents`}>\r\n              <Viewstudent />\r\n            </Route>\r\n            <Route path={`${path}/AddBook`}>\r\n              <Addbooks indexs={index} />\r\n            </Route>\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Staffpage;\r\n","F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\staffpage\\addbook.js",["115","116"],"import React, { useState } from \"react\";\r\nimport \"./addbook.css\";\r\nimport { auth, database, storage } from \"../../firebase\";\r\nimport { Form, Row, Col, Image, Button } from \"react-bootstrap\";\r\nfunction Addbook(props) {\r\n  const { indexs } = props;\r\n  const [details, setDetails] = useState({\r\n    title: \"\",\r\n    isbn: \"\",\r\n    authors: \"\",\r\n    pageCount: 0,\r\n    thumbnailUrl:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSrX1yjZ97Q9TaD-d5JTI8mjo3_caDHE5ZpGA&usqp=CAU\",\r\n    shortDescription: \"\",\r\n    totalbooks: 0,\r\n  });\r\n  const [error, seterror] = useState({\r\n    title: \"\",\r\n    isbn: \"\",\r\n    authors: \"\",\r\n    pageCount: \"\",\r\n    thumbnailUrl: \"\",\r\n    shortDescription: \"\",\r\n    totalbooks: \"\",\r\n  });\r\n  function valideateform() {\r\n    let feilds = details;\r\n    let errors = {\r\n      title: \"\",\r\n      isbn: \"\",\r\n      pageCount: \"\",\r\n      thumbnailUrl: \"\",\r\n      shortDescription: \"\",\r\n      totalbooks: \"\",\r\n    };\r\n    let fromisvalid = true;\r\n    if (!feilds[\"title\"]) {\r\n      fromisvalid = false;\r\n      errors[\"title\"] = \"*Please enter your title\";\r\n    }\r\n    if (!feilds[\"authors\"]) {\r\n      fromisvalid = false;\r\n      errors[\"authors\"] = \"*Please enter your authors\";\r\n    }\r\n    if (!feilds[\"isbn\"]) {\r\n      fromisvalid = false;\r\n      errors[\"isbn\"] = \"*Please enter your isbn\";\r\n    }\r\n    if (typeof feilds[\"isbn\"] !== \"undefined\") {\r\n      console.log(indexs.includes(feilds[\"isbn\"]));\r\n      if (indexs.includes(feilds[\"isbn\"])) {\r\n        fromisvalid = false;\r\n        errors[\"isbn\"] = \"The isbn is already exist\";\r\n      }\r\n    }\r\n    if (!feilds[\"pageCount\"]) {\r\n      fromisvalid = false;\r\n      errors[\"pageCount\"] = \"*Please enter your pageCount\";\r\n    }\r\n    if (!feilds[\"thumbnailUrl\"]) {\r\n      fromisvalid = false;\r\n      errors[\"thumbnailUrl\"] = \"*Please enter your thumbnailUrl\";\r\n    }\r\n    if (!feilds[\"shortDescription\"]) {\r\n      fromisvalid = false;\r\n      errors[\"shortDescription\"] = \"*Please enter your shortDescription\";\r\n    }\r\n    if (!feilds[\"totalbooks\"]) {\r\n      fromisvalid = false;\r\n      errors[\"totalbooks\"] = \"*Please enter your totalbooks\";\r\n    }\r\n    seterror(errors);\r\n    return fromisvalid;\r\n  }\r\n  function adddata(e) {\r\n    e.preventDefault();\r\n    if (valideateform()) {\r\n      console.log(details);\r\n      let db = database.ref(`bookdata/books/${details.isbn}`);\r\n      db.set(details)\r\n        .then((e) => {\r\n          console.log(e);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n    let feild = details;\r\n    console.log(e.target.value);\r\n    feild[e.target.name] = e.target.value;\r\n    setDetails(feild);\r\n    console.log(details);\r\n  }\r\n  return (\r\n    <div className=\"add-book-container\">\r\n      <Form>\r\n        <Row>\r\n          <Col xs={12} sm={6}>\r\n            <Row xs={12} className=\"image-comp\">\r\n              <Image src={details.thumbnailUrl} className=\"profileimage\" />\r\n            </Row>\r\n            <Row xs={12}>\r\n              <Form.File className=\"file-input\">\r\n                <Form.File.Label>thumbnailUrl</Form.File.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"thumbnailUrl\"\r\n                  className=\"input-img\"\r\n                  onChange={handleChange}\r\n                />\r\n                <Form.Text className=\"text-danger\">\r\n                  {error.thumbnailUrl}\r\n                </Form.Text>\r\n              </Form.File>\r\n            </Row>\r\n            <Row className=\"row-comp\">\r\n              <Col>\r\n                <Form.Group className=\"authors-comp\">\r\n                  <Form.Label>*Title</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"title\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Form.Text className=\"text-danger\">{error.title}</Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={12} sm={6}>\r\n            <Row className=\"row-comp\">\r\n              <Col>\r\n                <Form.Group className=\"authors-comp\">\r\n                  <Form.Label>*authors</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"authors\"\r\n                    placeholder=\"authors\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Form.Text className=\"text-danger\">{error.authors}</Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"row-comp\">\r\n              <Col>\r\n                <Form.Group className=\"authors-comp\">\r\n                  <Form.Label>*isbn</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"isbn\"\r\n                    placeholder=\"isbn\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Form.Text className=\"text-danger\">{error.isbn}</Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"row-comp\">\r\n              <Col>\r\n                <Form.Group className=\"authors-comp\">\r\n                  <Form.Label>*pageCount</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"pageCount\"\r\n                    placeholder=\"pageCount\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Form.Text className=\"text-danger\">\r\n                    {error.pageCount}\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"row-comp\">\r\n              <Col>\r\n                <Form.Group className=\"authors-comp\">\r\n                  <Form.Label>*totalbooks</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"totalbooks\"\r\n                    placeholder=\"totalbooks\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Form.Text className=\"text-danger\">\r\n                    {error.totalbooks}\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"row-comp\">\r\n          <Col>\r\n            <Form.Group className=\"authors-comp\">\r\n              <Form.Label>shortDescription</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                name=\"shortDescription\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Text className=\"text-danger\">\r\n              {error.shortDescription}\r\n            </Form.Text>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"row-comp\">\r\n          <Col className=\"submit\">\r\n            <Button type=\"submit\" onClick={adddata}>\r\n              Submit form\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addbook;\r\n",["117","118"],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\page.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\reudcers\\userinfo.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\mylibrary\\index.js",[],"F:\\clg\\c programing\\hackarank\\appa\\temerature_controll\\lib-management\\src\\mainpage\\staffpage\\viewstudent.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":7,"nodeType":"125","messageId":"126","endLine":1,"endColumn":21},{"ruleId":"123","severity":1,"message":"127","line":9,"column":25,"nodeType":"125","messageId":"126","endLine":9,"endColumn":29},{"ruleId":"128","severity":1,"message":"129","line":38,"column":6,"nodeType":"130","endLine":38,"endColumn":8,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"123","severity":1,"message":"133","line":5,"column":3,"nodeType":"125","messageId":"126","endLine":5,"endColumn":8},{"ruleId":"123","severity":1,"message":"134","line":6,"column":3,"nodeType":"125","messageId":"126","endLine":6,"endColumn":8},{"ruleId":"123","severity":1,"message":"135","line":14,"column":3,"nodeType":"125","messageId":"126","endLine":14,"endColumn":13},{"ruleId":"123","severity":1,"message":"136","line":318,"column":11,"nodeType":"125","messageId":"126","endLine":318,"endColumn":15},{"ruleId":"123","severity":1,"message":"137","line":17,"column":7,"nodeType":"125","messageId":"126","endLine":17,"endColumn":11},{"ruleId":"123","severity":1,"message":"138","line":5,"column":3,"nodeType":"125","messageId":"126","endLine":5,"endColumn":9},{"ruleId":"123","severity":1,"message":"139","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":15},{"ruleId":"123","severity":1,"message":"140","line":14,"column":10,"nodeType":"125","messageId":"126","endLine":14,"endColumn":15},{"ruleId":"128","severity":1,"message":"141","line":232,"column":6,"nodeType":"130","endLine":232,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":59,"column":11,"nodeType":"145","endLine":59,"endColumn":79},{"ruleId":"143","severity":1,"message":"144","line":65,"column":15,"nodeType":"145","endLine":69,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":145,"column":15,"nodeType":"145","endLine":145,"endColumn":70},{"ruleId":"143","severity":1,"message":"144","line":23,"column":11,"nodeType":"145","endLine":23,"endColumn":79},{"ruleId":"143","severity":1,"message":"144","line":29,"column":15,"nodeType":"145","endLine":33,"endColumn":17},{"ruleId":"128","severity":1,"message":"148","line":72,"column":6,"nodeType":"130","endLine":72,"endColumn":8,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"147","line":123,"column":19,"nodeType":"145","endLine":123,"endColumn":74},{"ruleId":"123","severity":1,"message":"150","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"151","line":3,"column":26,"nodeType":"125","messageId":"126","endLine":3,"endColumn":33},{"ruleId":"119","replacedBy":"152"},{"ruleId":"121","replacedBy":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'counterReducer' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'states.islogged'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'CloseIcon' is defined but never used.","'Slide' is defined but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'user' is assigned a value but never used.","'fire' is assigned a value but never used.","'Button' is defined but never used.","'CarouselItem' is defined but never used.","'login' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setstate(s => ...)' if you only need 'state' in the 'setstate' call.",["157"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Card_data must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'status.islogged'. Either include it or remove the dependency array.",["158"],"'auth' is defined but never used.","'storage' is defined but never used.",["154"],["155"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [dispatch, states.islogged]",{"range":"165","text":"166"},"Update the dependencies array to be: [state]",{"range":"167","text":"168"},"Update the dependencies array to be: [status.islogged]",{"range":"169","text":"170"},[1301,1303],"[dispatch, states.islogged]",[6848,6850],"[state]",[2607,2609],"[status.islogged]"]